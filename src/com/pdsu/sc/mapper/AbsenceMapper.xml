<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pdsu.sc.mapper.AbsenceMapper">

	<!-- ==============================手动添加============================================== -->
	<!-- public List<Absence> selectAll(); -->
	
	<!--列表查询 -->
	<resultMap type="com.pdsu.sc.po.Absence"
		id="queryAbsenceAllMap">
		<id column="ab_id" property="abId"></id>
		<result column="ab_name" property="abName"></result>
		<result column="ab_team" property="abTeam"></result>
		<result column="ab_time" property="abTime"></result>
		
		<collection property="teammapping"
			ofType="com.pdsu.sc.po.Teammapping">
			<id column="tmm_id" property="tmmId"></id>
			<result column="tmm_name" property="tmmName"></result>
		</collection>

	</resultMap>
	
	
	<select id="selectAll" resultMap="queryAbsenceAllMap">
		select sc_absence.`ab_id`,sc_absence.`ab_name`,sc_teammapping.`tmm_name`,sc_absence.`ab_time`
		from sc_absence,sc_teammapping
		where sc_absence.`ab_team`=sc_teammapping.`tmm_id`
	</select>

	<!-- public List<Absence> selectAbsenceByPage(@Param(value="startPos") Integer 
		startPos, @Param(value="pageSize") Integer pageSize); -->
	<select id="selectAbsenceByPage"
		resultType="com.pdsu.sc.po.Absence">
		select * from sc_absence limit #{startPos},#{pageSize}
	</select>
	<!-- 取得记录的总数 -->

	<select id="getAbsenceCount" resultType="long">
		SELECT COUNT(*) FROM sc_absence
	</select>


<!--     //批量删除
    public Integer deleteMany(int[] id_arr); -->
    
   <delete id="deleteMany">
    delete from sc_absence where ab_id in
    <foreach item="qid" collection="array" open="(" separator="," close=")">
        #{qid}
    </foreach>
</delete>
<!-- Student selectByName(String name); -->
<select id="selectByName" resultType="com.pdsu.sc.po.Absence">
	select * from sc_absence where ab_name=#{name}
</select>
<!-- int updateByName(String name); -->
<update id="updateByName">
	UPDATE sc_absence SET ab_time=ab_time+1 WHERE ab_name=#{name}
</update>
	<!-- ================================================================================== -->
	<resultMap id="BaseResultMap" type="com.pdsu.sc.po.Absence">
		<id column="ab_id" jdbcType="INTEGER" property="abId" />
		<result column="ab_name" jdbcType="VARCHAR" property="abName" />
		<result column="ab_team" jdbcType="INTEGER" property="abTeam" />
		<result column="ab_time" jdbcType="INTEGER" property="abTime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ab_id, ab_name, ab_team, ab_time
	</sql>
	<select id="selectByExample"
		parameterType="com.pdsu.sc.po.AbsenceExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from sc_absence
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sc_absence
		where ab_id = #{abId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from sc_absence
		where ab_id = #{abId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.pdsu.sc.po.AbsenceExample">
		delete from sc_absence
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.pdsu.sc.po.Absence">
		insert into sc_absence (ab_id, ab_name, ab_team,
		ab_time)
		values (#{abId,jdbcType=INTEGER}, #{abName,jdbcType=VARCHAR},
		#{abTeam,jdbcType=INTEGER},
		#{abTime,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.pdsu.sc.po.Absence">
		insert into sc_absence
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="abId != null">
				ab_id,
			</if>
			<if test="abName != null">
				ab_name,
			</if>
			<if test="abTeam != null">
				ab_team,
			</if>
			<if test="abTime != null">
				ab_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="abId != null">
				#{abId,jdbcType=INTEGER},
			</if>
			<if test="abName != null">
				#{abName,jdbcType=VARCHAR},
			</if>
			<if test="abTeam != null">
				#{abTeam,jdbcType=INTEGER},
			</if>
			<if test="abTime != null">
				#{abTime,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.pdsu.sc.po.AbsenceExample"
		resultType="java.lang.Long">
		select count(*) from sc_absence
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update sc_absence
		<set>
			<if test="record.abId != null">
				ab_id = #{record.abId,jdbcType=INTEGER},
			</if>
			<if test="record.abName != null">
				ab_name = #{record.abName,jdbcType=VARCHAR},
			</if>
			<if test="record.abTeam != null">
				ab_team = #{record.abTeam,jdbcType=INTEGER},
			</if>
			<if test="record.abTime != null">
				ab_time = #{record.abTime,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update sc_absence
		set ab_id = #{record.abId,jdbcType=INTEGER},
		ab_name = #{record.abName,jdbcType=VARCHAR},
		ab_team = #{record.abTeam,jdbcType=INTEGER},
		ab_time = #{record.abTime,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.pdsu.sc.po.Absence">
		update sc_absence
		<set>
			<if test="abName != null">
				ab_name = #{abName,jdbcType=VARCHAR},
			</if>
			<if test="abTeam != null">
				ab_team = #{abTeam,jdbcType=INTEGER},
			</if>
			<if test="abTime != null">
				ab_time = #{abTime,jdbcType=INTEGER},
			</if>
		</set>
		where ab_id = #{abId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.pdsu.sc.po.Absence">
		update sc_absence
		set ab_name = #{abName,jdbcType=VARCHAR},
		ab_team = #{abTeam,jdbcType=INTEGER},
		ab_time = #{abTime,jdbcType=INTEGER}
		where ab_id = #{abId,jdbcType=INTEGER}
	</update>
	
	<resultMap type="com.pdsu.sc.po.Absence"
		id="queryJlruleAllMap">
		<id column="ab_id" property="abId"></id>
		<result column="ab_name" property="abName"></result>
		<result column="ab_team" property="abTeam"></result>
		<result column="ab_time" property="abTime"></result>
		
		<collection property="teammapping"
			ofType="com.pdsu.sc.po.Teammapping">
			<id column="tmm_id" property="tmmId"></id>
			<result column="tmm_name" property="tmmName"></result>
		</collection>

	</resultMap>
	
	<select id="queryAbsenceByTeam" parameterType="Integer" resultMap="queryJlruleAllMap">
		select sc_absence.`ab_id`,sc_absence.`ab_name`,sc_teammapping.`tmm_name`,sc_absence.`ab_time`
		from sc_absence,sc_teammapping
		where sc_absence.`ab_team`=sc_teammapping.`tmm_id` and sc_absence.`ab_team`=#{abTeam}
	</select>
	
	
	
</mapper>
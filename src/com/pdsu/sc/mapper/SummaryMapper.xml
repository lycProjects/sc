<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pdsu.sc.mapper.SummaryMapper">
	<resultMap id="BaseResultMap" type="com.pdsu.sc.po.Summary">
		<id column="su_id" jdbcType="INTEGER" property="suId" />
		<result column="su_team" jdbcType="INTEGER" property="suTeam" />
		<result column="su_absence" jdbcType="INTEGER"
			property="suAbsence" />
		<result column="su_weisheng" jdbcType="INTEGER"
			property="suWeisheng" />
		<result column="su_jilv" jdbcType="INTEGER" property="suJilv" />
		<result column="su_total" jdbcType="INTEGER" property="suTotal" />
		<result column="su_order" jdbcType="INTEGER" property="suOrder" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		su_id, su_team, su_absence, su_weisheng, su_jilv, su_total, su_order
	</sql>
	<select id="selectByExample"
		parameterType="com.pdsu.sc.po.SummaryExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from sc_summary
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sc_summary
		where su_id = #{suId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from sc_summary
		where su_id = #{suId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.pdsu.sc.po.SummaryExample">
		delete from sc_summary
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.pdsu.sc.po.Summary">
		insert into sc_summary (su_id, su_team, su_absence,
		su_weisheng, su_jilv, su_total,
		su_order)
		values (#{suId,jdbcType=INTEGER}, #{suTeam,jdbcType=INTEGER},
		#{suAbsence,jdbcType=INTEGER},
		#{suWeisheng,jdbcType=INTEGER}, #{suJilv,jdbcType=INTEGER}, #{suTotal,jdbcType=INTEGER},
		#{suOrder,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.pdsu.sc.po.Summary">
		insert into sc_summary
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="suId != null">
				su_id,
			</if>
			<if test="suTeam != null">
				su_team,
			</if>
			<if test="suAbsence != null">
				su_absence,
			</if>
			<if test="suWeisheng != null">
				su_weisheng,
			</if>
			<if test="suJilv != null">
				su_jilv,
			</if>
			<if test="suTotal != null">
				su_total,
			</if>
			<if test="suOrder != null">
				su_order,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="suId != null">
				#{suId,jdbcType=INTEGER},
			</if>
			<if test="suTeam != null">
				#{suTeam,jdbcType=INTEGER},
			</if>
			<if test="suAbsence != null">
				#{suAbsence,jdbcType=INTEGER},
			</if>
			<if test="suWeisheng != null">
				#{suWeisheng,jdbcType=INTEGER},
			</if>
			<if test="suJilv != null">
				#{suJilv,jdbcType=INTEGER},
			</if>
			<if test="suTotal != null">
				#{suTotal,jdbcType=INTEGER},
			</if>
			<if test="suOrder != null">
				#{suOrder,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.pdsu.sc.po.SummaryExample"
		resultType="java.lang.Long">
		select count(*) from sc_summary
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update sc_summary
		<set>
			<if test="record.suId != null">
				su_id = #{record.suId,jdbcType=INTEGER},
			</if>
			<if test="record.suTeam != null">
				su_team = #{record.suTeam,jdbcType=INTEGER},
			</if>
			<if test="record.suAbsence != null">
				su_absence = #{record.suAbsence,jdbcType=INTEGER},
			</if>
			<if test="record.suWeisheng != null">
				su_weisheng = #{record.suWeisheng,jdbcType=INTEGER},
			</if>
			<if test="record.suJilv != null">
				su_jilv = #{record.suJilv,jdbcType=INTEGER},
			</if>
			<if test="record.suTotal != null">
				su_total = #{record.suTotal,jdbcType=INTEGER},
			</if>
			<if test="record.suOrder != null">
				su_order = #{record.suOrder,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update sc_summary
		set su_id = #{record.suId,jdbcType=INTEGER},
		su_team = #{record.suTeam,jdbcType=INTEGER},
		su_absence = #{record.suAbsence,jdbcType=INTEGER},
		su_weisheng = #{record.suWeisheng,jdbcType=INTEGER},
		su_jilv = #{record.suJilv,jdbcType=INTEGER},
		su_total = #{record.suTotal,jdbcType=INTEGER},
		su_order = #{record.suOrder,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.pdsu.sc.po.Summary">
		update sc_summary
		<set>
			<if test="suTeam != null">
				su_team = #{suTeam,jdbcType=INTEGER},
			</if>
			<if test="suAbsence != null">
				su_absence = #{suAbsence,jdbcType=INTEGER},
			</if>
			<if test="suWeisheng != null">
				su_weisheng = #{suWeisheng,jdbcType=INTEGER},
			</if>
			<if test="suJilv != null">
				su_jilv = #{suJilv,jdbcType=INTEGER},
			</if>
			<if test="suTotal != null">
				su_total = #{suTotal,jdbcType=INTEGER},
			</if>
			<if test="suOrder != null">
				su_order = #{suOrder,jdbcType=INTEGER},
			</if>
		</set>
		where su_id = #{suId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.pdsu.sc.po.Summary">
		update sc_summary
		set su_team = #{suTeam,jdbcType=INTEGER},
		su_absence = #{suAbsence,jdbcType=INTEGER},
		su_weisheng = #{suWeisheng,jdbcType=INTEGER},
		su_jilv = #{suJilv,jdbcType=INTEGER},
		su_total = #{suTotal,jdbcType=INTEGER},
		su_order = #{suOrder,jdbcType=INTEGER}
		where su_id = #{suId,jdbcType=INTEGER}
	</update>
</mapper>